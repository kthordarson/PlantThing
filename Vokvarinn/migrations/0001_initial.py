# Generated by Django 2.2.3 on 2019-08-12 13:42

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Plants',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Vokvarinn.BaseModel')),
                ('name', models.CharField(max_length=120)),
                ('last_water', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('info_url', models.URLField(blank=True, null=True)),
                ('water_schedule', models.CharField(default='1', max_length=30)),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/plant_images/')),
            ],
            options={
                'verbose_name_plural': 'Plants',
                'ordering': ['name'],
            },
            bases=('Vokvarinn.basemodel',),
        ),
        migrations.CreateModel(
            name='PlantLog',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Vokvarinn.BaseModel')),
                ('last_water', models.DateTimeField(default=django.utils.timezone.now)),
                ('plant', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='Vokvarinn.Plants')),
            ],
            options={
                'verbose_name_plural': 'Logs',
            },
            bases=('Vokvarinn.basemodel',),
        ),
    ]
